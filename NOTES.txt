
USING npx:
npx create-react-app app-name


USING npm:
Create folder
npm init react-app app-name

Inside folder
npm init react-app .

Gets rid of babel error - add to bottom of package.json
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11"
  }


INSTALLING Tailwind CSS
Puts entries in package.json 
npm install --save-dev tailwindcss@latest autoprefixer@latest

Creates the tailwind.config.js
npx tailwindcss init

Add to tailwind.config.js
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{html,js,jsx}"],
  theme: {
    extend: {},
  },
  plugins: [],
}

Add to src/App.css
@tailwind base;
@tailwind components;
@tailwind utilities;


ADDING prettierrc
add .prettierrc.json file and add {} to the file

In Visual Studio Code, Add Extensions - and install:
  Prettier - Code formatter

Go to 
Settings -> Text Editor -> Formatting -> Format On save - Checked

In Settings search for:
  Prettier: Require Config - Checked

.GITIGNORE contents
-------------------------------------------------
# node_modules/
node_modules/

# .parcel-cache/
.parcel-cache/

# dist/
dist/

# Ignore .vscode folder
.vscode/
-------------------------------------------------

USING LIVE SERVER in Visual Studio Code
The exercises in the beginning are very simple and to view the results in the 
browser you will right click on the index.html and select:  Open with Live Server
Remember to close the live server when done, by clicking on the -  
Port: XXXX - located on bottom right of VSC 


Notes for specific code-alongs & exercises
------------------------------------------------- 
-------------------------------------------------

01_INTRO TO REACT - NOTE:  Uses CDN for React functionality
create folder for course projects 
then open with Visual Studio Code and continue with exercise
Right click the index.html and select:
  Open with Live Server  
when ready to view results in browser


-------------------------------------------------


02_SET UP REACT APP -  Hello World
Uses Visual Studio Code & create-react-app
Follow directions in Engage
  npm start
At end when adding a formatting tool, do the second way and 
Add the Prettier Extension to Visual Studio Code


-------------------------------------------------


03_CODE-ALONG: Create a React Component
download, extract zip & open in Visual Studio Code
there will only be 2 files - very simple
Right click the index.html and select:
  Open with Live Server  
to view results in browser


-------------------------------------------------


04_EXERCISE:   Composing Components
download, extract zip & open in Visual Studio Code
will only be working with 2 files:  index.html & solutionPage.html
index.html has babel scripts to render 5 const on page
will convert to Components and put on the solutionPage.html
When ready to view pages use Live Server


-------------------------------------------------


05_CODE-ALONG: Create an Interactive Search Bar for the Contact List
download, extract zip & open in Visual Studio Code
  npm install
  npm update

delete .babelrc
remove "autoprefixer" : {} from .postcssrc file
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

  npm run dev

Make sure when you import in components to leave off the .jsx extension
  import Contact from "./Contact"; - good
  import Contact from "./Contact.jsx"; -will cause unexpected errors


-------------------------------------------------


06_DEMO - The Effect Hook
This is a demo created with create-react-app and is not a
code-along or exercise
  npm start


-------------------------------------------------


07_CODE-ALONG: Add Side Effects to Search The Contact List
download, extract zip & open in Visual Studio Code
delete the .parsel-cache & dist folders
  npm install
  npm update

add .gitignore 
delete .babelrc
remove "autoprefixer" : {} from .postcssrc file
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

  npm run dev


contact.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||
contact.lastName.toLowerCase().includes(searchTerm.toLowerCase()) 


-------------------------------------------------


08_DEMO Custom Hooks
This is a demo created with create-react-app and is not a
code-along or exercise
  npm start


-------------------------------------------------


09_CODE-ALONG: Create a Custom Fetch Hook for the Contact List
download, extract zip & open in Visual Studio Code
  npm install
  npm update

add .gitignore 
delete .babelrc
remove "autoprefixer" : {} from .postcssrc file
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

  npm run dev


-------------------------------------------------


10_EXERCISE: Simple React Calculator
There is one version of the calculator and want to add a couple 
of different solutions for the Simple Calculator

-------------------------------------------------


11_MID-POINT ASSIGNMENT: Sale Countdown
download, extract zip & open in Visual Studio Code
  npm install
  npm update

remove "autoprefixer" : {} from .postcssrc file
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

// Maybe give the students a heads up on this...
to use the 'date-fns' package run:
  npm install date-fns --save

  npm run dev

NOTE:  new Date() will not work.  Need to put in a static date


-------------------------------------------------


12_CODE-ALONG: Add React Router and Routes to the Contact List
download, extract zip & open in Visual Studio Code
  npm install
  npm update

add .gitignore 
delete .babelrc
remove "autoprefixer" : {} from .postcssrc file

this command creates the tailwind.config.js file
  npx tailwindcss init

add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"], -  -at the top
                                              purge: ["./src/**/*.html", "./src/**/*.jsx"],
  npm run dev


-------------------------------------------------


13_EXERCISE: Routing Pages
download, extract zip & open in Visual Studio Code
if you have windows pc, delete the _MACOSX folder

  npm install 
  npm install react-router-dom@6

remove "autoprefixer" : {} from .postcssrc file 
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge
package.json file - change name from "ExerciseRoutingPages" to "exerciseroutingpages"

  npm run dev

Test results by entering following URL's:
  http://localhost:1234/
  http://localhost:1234/men
  http://localhost:1234/women
  http://localhost:1234/sale
  http://localhost:1234/seasonal  


-------------------------------------------------


14_CODE-ALONG: Add Route Changers to the Contact List
download, extract zip & open in Visual Studio Code

  npm install

add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

  npm run dev

Engage has the following line of code:
    key={contact.id}  
however, the code is actually:
    key={contact.contactId}


-------------------------------------------------



15_EXERCISE: Set up Route Changers
download, extract zip & open in Visual Studio Code
delete the .parsel-cache & dist folders

  npm install

remove "autoprefixer" : {} from .postcssrc file 
package.json file - change name from "ExerciseRoutingPages" to "exerciseroutingpages"

  npm run dev


-------------------------------------------------


16_CODE-ALONG: Add an Error Boundary
download, extract zip & open in Visual Studio Code
delete the .parsel-cache & dist folders
  
  npm install

add .gitignore 
delete .babelrc
remove "autoprefixer" : {} from .postcssrc file
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],   -at the top above purge

  npm run dev



-------------------------------------------------


17_EXERCISE: Refactoring Components
download, extract zip & open in Visual Studio Code
delete the .parsel-cache & dist folders

  npm install

delete .babelrc
remove "autoprefixer" : {} from .postcssrc file
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

  npm run dev


-------------------------------------------------


18_CODE-ALONG: Add a User Context
download, extract zip & open in Visual Studio Code
delete the .parsel-cache & dist folders

  npm install

add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

  npm run dev


-------------------------------------------------


19_EXERCISE: Create and Consume Context
download, extract zip & open in Visual Studio Code
if you have windows pc, delete the _MACOSX folder
delete the .parsel-cache & dist folders

  npm install

add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge
remove "autoprefixer" : {} from .postcss.config.js file

  npm run dev


-------------------------------------------------


20_CODE-ALONG: Set Up a Testing Environment
download, extract zip & open in Visual Studio Code
delete the .parsel-cache & dist folders

  npm install
  npm install --save-dev jest msw @testing-library/react @testing-library/user-event @testing-library/jest-dom whatwg-fetch eslint-plugin-jest
OR - if the above command errors out
  npm install --legacy-peer-deps --save-dev jest msw @testing-library/react @testing-library/user-event @testing-library/jest-dom whatwg-fetch eslint-plugin-jest

add .gitignore
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

follow code along to configure jest, babel & eslint

  npm run test 

  npm install --legacy-peer-deps --save-dev @babel/preset-env
-------------------------------------------------


21_CODE-ALONG: Test React Components
download, extract zip & open in Visual Studio Code
delete the .parsel-cache & dist folders

  npm install
  npm install --save-dev jest msw @testing-library/react @testing-library/user-event @testing-library/jest-dom whatwg-fetch eslint-plugin-jest
  OR
  npm install --legacy-peer-deps --save-dev jest msw @testing-library/react @testing-library/user-event @testing-library/jest-dom whatwg-fetch eslint-plugin-jest

add .gitignore
add to tailwind.config.js:    content: ["./src/**/*.{html,js,jsx}"],  -at the top above purge

NOTE:  the jest.setup.js file is empty - use contents from previous exercise
             the folder name can be  __tests__ or __test__

To run tests:

  npm run test



*Test 1
test("displays the home page", async function () {});
not
test("displays the create contact page", async function () {});

The test will fail if the react version in the package.json file is ^17.0.X, the 
zip download for this exercise has ^18.2.0 as the version in the package.json file
so it should not fail 

*Test 3
create the requestHandlers.js & server.js
add beforAll(), afterEach(), afterAll() methods

Verify -
  "whatwg-fetch": "^3.6.18" - should be in package.json file
  import "whatwg-fetch"; -   should be in useFetch.jsx file
If not there -
  npm install --save-dev whatwg-fetch
  add import "whatwg-fetch"; in useFetch.jsx file

*Test 6
The test passes, however, there is an error that I have yet to figure out that 
occurs after the tests run.  It has something to do with the test finishing before 
the component is unmounted.
Once TEST 7 is written and run, the error stays but all 7 tests pass.

*Test 7
This is written on a new file, Search.test.js


-------------------------------------------------

NOTE:  Use Postman to see what data is returned:
  GET  https://dashboard.mthree.academy/daily/kpis
  GET  https://dashboard.mthree.academy/daily/employees
  GET  https://dashboard.mthree.academy/reviews/stats
  GET  https://dashboard.mthree.academy/reviews/all
  GET  https://dashboard.mthree.academy/year/sales

22_CODE-ALONG: Dashboard Base Components - Part 1
download, extract zip & open in Visual Studio Code

  npm install
  npm run dev

You will get errors when you run the app.  This is OK & expected.

Start code along
During the code along you will be using the following npm commands
  npm run test
  npm install recharts
  npm install @headlessui/react
  npm install react-router-dom@6

If errors, for the UserContext.test.js file, change this:
import { StaticRouter } from "react-router-dom/server";
to this:
import { StaticRouter } from "react-router-dom";

While building the Home, Reviews and Sales pages, urge the students to refer back to the 
base components and props that the pages are using

-------------------------------------------------






